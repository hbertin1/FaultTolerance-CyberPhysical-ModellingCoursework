class ErrorDetection

    instance variables
        private last_pos : seq of real := [0.0, 0.0, 0.0, 0.0];
        private fault : Fault;
        private last_time: real := time;

    operations
        public ErrorDetection : seq of real ==> ErrorDetection
        ErrorDetection(position) == (
            last_pos := position;
            fault := new Fault();
            last_time := time;
        );

        public detect : seq of real * real ==> Fault
        detect(pos, speed) == (
            dcl diff : seq of real := [0.0, 0.0, 0.0, 0.0];
            dcl locate : seq of Fault`Location := [<GNSS_E>, <GNSS_N>, <GNSS_H>];  -- used to find the index in pos
            dcl theoreticalPos : seq of real := calculateNextPos(speed);

            fault := new Fault(); 
            -- the position is stored for the next step
            -- Ii will be modify later in case pos is faulty
            last_pos := pos;

            for i = 1 to len diff-2 by 1 do (           -- -2 bc the 4th value isn't used and tetha not yet implemented
                diff(i) := abs(pos(i) - theoreticalPos(i));
                if diff(i) > 0.3 then (
                    fault.setDetected(true);
                    fault.setLocation(locate(i));
                    fault.setTheoreticalValue(theoreticalPos(i), i);
                    last_pos(i) := theoreticalPos(i);
                    IO`printf("Error detected, location : %s \n", [locate(i)]);
                );
            ); 
            last_time := time;
            return fault;   
        );

        -- theoretical GNSS Position thanks to previous position and speed
        private calculateNextPos : real ==> seq of real
        calculateNextPos(speed) == (
            dcl delta_time : real := (time-last_time)/1e9;
            dcl distance : real := speed * delta_time;
            dcl new_pos : seq of real := [0.0, 0.0, 0.0, 0.0];

            new_pos(1) := last_pos(1) + (distance * MATH`sin(last_pos(3)));
            new_pos(2) := last_pos(2) + (distance * MATH`cos(last_pos(3)));
            -- theta not implemented yet
            -- new_pos(3) := MATH`atan2(new_pos(1), new_pos(2));

            return new_pos;
        );

end ErrorDetection