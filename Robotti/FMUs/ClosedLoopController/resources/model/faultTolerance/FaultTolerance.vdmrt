class FaultTolerance

    types 
        Mode  = <INIT> | <ERROR_DETECTION> | <ERROR_RECOVERY>;
    
    instance variables
        private errorDetection : [ErrorDetection] := nil;
        private errorRecovery : [ErrorRecovery] := nil;
        private mode : Mode := <INIT>;
        private last_pos : seq of real :=  [0.0, 0.0, 0.0, 0.0];
        private fault : Fault;

    operations
        public FaultTolerance :  () ==> FaultTolerance
        FaultTolerance() == (
            mode := <INIT>;
            errorDetection := new ErrorDetection(last_pos);
            errorRecovery := new ErrorRecovery(last_pos);
            fault := new Fault();
        );

        public check : seq of real * real ==> seq of real
        check(pos, speed) == (                                  
            -- IO`printf("pos : [%s,%s,%s]", [pos(1), pos(2), pos(3)]);
           
            if mode = <INIT> then mode := <ERROR_DETECTION>     -- maybe add init time
            else if mode = <ERROR_DETECTION> then (
                fault := errorDetection.detect(pos, speed);
                if fault.isDetected() then mode := <ERROR_RECOVERY>;
            );
            if mode = <ERROR_RECOVERY> then (
                mode := <ERROR_DETECTION>;
                return errorRecovery.recover(pos, fault);
            );
            return pos;
        );

end FaultTolerance