class ErrorRecovery

    instance variables
        last_pos: seq of real :=  [0.0, 0.0, 0.0, 0.0];
        -- last_time: real := time;

    operations
        public ErrorRecovery : seq of real ==> ErrorRecovery
        ErrorRecovery(pos) == (
            last_pos := pos;
            -- last_time := time;
        );

        public recover: seq of real * Fault * real ==> seq of real
        recover(pos, fault, speed) == (
            dcl loc : Fault`Location := fault.getLocation();
            dcl faultParam : int := 0;
            dcl new_pos : seq of real := pos;
            -- dcl delta_time : real := (time-last_time)/1e9;
            -- dcl distance : real := speed * delta_time;

            -- IO`printf("last_time : %s, time : %s, delta_time : %s\n", [last_time/1e9, time/1e9, delta_time]);
            
            if loc = <GNSS_E> then faultParam := 1
            else if loc = <GNSS_N> then faultParam := 2
            else if loc = <GNSS_H> then faultParam := 3
            else return pos;

            faultParam := 1;

            if faultParam = 1 then (
                -- dcl new_x : real := last_pos(1)+ (distance * MATH`sin(last_pos(3)));
                new_pos(1) := fault.getTheoreticalValue(1);
                IO`printf("pos new : [%s,%s,%s]", [new_pos(1), new_pos(2), new_pos(3)]);
            );
            -- if faultParam = 2 then (
            --     new_pos(faultParam) := fault.getTheoreticalValue(faultParam);
            -- );
            -- last_pos := new_pos;
            -- last_time := time;
            return new_pos;
        );

end ErrorRecovery